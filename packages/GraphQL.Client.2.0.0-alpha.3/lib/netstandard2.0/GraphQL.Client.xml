<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GraphQL.Client</name>
    </assembly>
    <members>
        <member name="T:GraphQL.Client.Http.GraphQLHttpClient">
            <summary>
            A Client to access GraphQL EndPoints
            </summary>
        </member>
        <member name="P:GraphQL.Client.Http.GraphQLHttpClient.DefaultRequestHeaders">
            <summary>
            Gets the headers which should be sent with each request.
            </summary>
        </member>
        <member name="P:GraphQL.Client.Http.GraphQLHttpClient.EndPoint">
            <summary>
            The GraphQL EndPoint to be used
            </summary>
        </member>
        <member name="P:GraphQL.Client.Http.GraphQLHttpClient.Options">
            <summary>
            The Options	to be used
            </summary>
        </member>
        <member name="M:GraphQL.Client.Http.GraphQLHttpClient.#ctor(System.String)">
            <summary>
            Initializes a new instance
            </summary>
            <param name="endPoint">The EndPoint to be used</param>
        </member>
        <member name="M:GraphQL.Client.Http.GraphQLHttpClient.#ctor(System.Uri)">
            <summary>
            Initializes a new instance
            </summary>
            <param name="endPoint">The EndPoint to be used</param>
        </member>
        <member name="M:GraphQL.Client.Http.GraphQLHttpClient.#ctor(System.String,GraphQL.Client.Http.GraphQLHttpClientOptions)">
            <summary>
            Initializes a new instance
            </summary>
            <param name="endPoint">The EndPoint to be used</param>
            <param name="options">The Options to be used</param>
        </member>
        <member name="M:GraphQL.Client.Http.GraphQLHttpClient.#ctor(System.Uri,GraphQL.Client.Http.GraphQLHttpClientOptions)">
            <summary>
            Initializes a new instance
            </summary>
            <param name="endPoint">The EndPoint to be used</param>
            <param name="options">The Options to be used</param>
        </member>
        <member name="M:GraphQL.Client.Http.GraphQLHttpClient.#ctor(GraphQL.Client.Http.GraphQLHttpClientOptions)">
            <summary>
            Initializes a new instance
            </summary>
            <param name="options">The Options to be used</param>
        </member>
        <member name="M:GraphQL.Client.Http.GraphQLHttpClient.Dispose">
            <summary>
            Releases unmanaged resources
            </summary>
        </member>
        <member name="T:GraphQL.Client.Http.GraphQLHttpClientOptions">
            <summary>
            The Options that the <see cref="T:GraphQL.Client.Http.GraphQLHttpClient"/> will use
            </summary>
        </member>
        <member name="P:GraphQL.Client.Http.GraphQLHttpClientOptions.EndPoint">
            <summary>
            The GraphQL EndPoint to be used
            </summary>
        </member>
        <member name="P:GraphQL.Client.Http.GraphQLHttpClientOptions.JsonSerializerSettings">
            <summary>
            The <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/> that is going to be used
            </summary>
        </member>
        <member name="P:GraphQL.Client.Http.GraphQLHttpClientOptions.HttpMessageHandler">
            <summary>
            The <see cref="T:System.Net.Http.HttpMessageHandler"/> that is going to be used
            </summary>
        </member>
        <member name="P:GraphQL.Client.Http.GraphQLHttpClientOptions.MediaType">
            <summary>
            The <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/> that will be send on POST
            </summary>
        </member>
        <member name="T:GraphQL.Client.Http.GraphQLHttpException">
            <summary>
            An exception thrown on unexpected <see cref="T:System.Net.Http.HttpResponseMessage"/>
            </summary>
        </member>
        <member name="P:GraphQL.Client.Http.GraphQLHttpException.HttpResponseMessage">
            <summary>
            The <see cref="T:System.Net.Http.HttpResponseMessage"/>
            </summary>
        </member>
        <member name="M:GraphQL.Client.Http.GraphQLHttpException.#ctor(System.Net.Http.HttpResponseMessage)">
            <summary>
            Creates a new instance of <see cref="T:GraphQL.Client.Http.GraphQLHttpException"/>
            </summary>
            <param name="httpResponseMessage">The unexpected <see cref="T:System.Net.Http.HttpResponseMessage"/></param>
        </member>
        <member name="T:GraphQL.Client.Http.GraphQLHttpSubscriptionResult">
            <summary>
            Represents the result of a subscription query
            </summary>
        </member>
        <member name="F:GraphQL.Client.Http.GraphQLHttpSubscriptionResult.GQLWebSocketMessageType.GQL_CONNECTION_INIT">
            <summary>
                Client sends this message after plain websocket connection to start the communication with the server
                The server will response only with GQL_CONNECTION_ACK + GQL_CONNECTION_KEEP_ALIVE(if used) or GQL_CONNECTION_ERROR
                to this message.
                payload: Object : optional parameters that the client specifies in connectionParams
            </summary>
        </member>
        <member name="F:GraphQL.Client.Http.GraphQLHttpSubscriptionResult.GQLWebSocketMessageType.GQL_CONNECTION_ACK">
            <summary>
                The server may responses with this message to the GQL_CONNECTION_INIT from client, indicates the server accepted
                the connection.
            </summary>
        </member>
        <member name="F:GraphQL.Client.Http.GraphQLHttpSubscriptionResult.GQLWebSocketMessageType.GQL_CONNECTION_ERROR">
            <summary>
                The server may responses with this message to the GQL_CONNECTION_INIT from client, indicates the server rejected
                the connection.
                It server also respond with this message in case of a parsing errors of the message (which does not disconnect the
                client, just ignore the message).
                payload: Object: the server side error
            </summary>
        </member>
        <member name="F:GraphQL.Client.Http.GraphQLHttpSubscriptionResult.GQLWebSocketMessageType.GQL_CONNECTION_KEEP_ALIVE">
            <summary>
                Server message that should be sent right after each GQL_CONNECTION_ACK processed and then periodically to keep the
                client connection alive.
                The client starts to consider the keep alive message only upon the first received keep alive message from the
                server.
                <remarks>
                    NOTE: This one here don't follow the standard due to connection optimization
                </remarks>
            </summary>
        </member>
        <member name="F:GraphQL.Client.Http.GraphQLHttpSubscriptionResult.GQLWebSocketMessageType.GQL_CONNECTION_TERMINATE">
            <summary>
                Client sends this message in order to stop a running GraphQL operation execution (for example: unsubscribe)
                id: string : operation id
            </summary>
        </member>
        <member name="F:GraphQL.Client.Http.GraphQLHttpSubscriptionResult.GQLWebSocketMessageType.GQL_START">
            <summary>
                Client sends this message to execute GraphQL operation
                id: string : The id of the GraphQL operation to start
                payload: Object:
                query: string : GraphQL operation as string or parsed GraphQL document node
                variables?: Object : Object with GraphQL variables
                operationName?: string : GraphQL operation name
            </summary>
        </member>
        <member name="F:GraphQL.Client.Http.GraphQLHttpSubscriptionResult.GQLWebSocketMessageType.GQL_DATA">
            <summary>
                The server sends this message to transfer the GraphQL execution result from the server to the client, this message
                is a response for GQL_START message.
                For each GraphQL operation send with GQL_START, the server will respond with at least one GQL_DATA message.
                id: string : ID of the operation that was successfully set up
                payload: Object :
                data: any: Execution result
                errors?: Error[] : Array of resolvers errors
            </summary>
        </member>
        <member name="F:GraphQL.Client.Http.GraphQLHttpSubscriptionResult.GQLWebSocketMessageType.GQL_ERROR">
            <summary>
                Server sends this message upon a failing operation, before the GraphQL execution, usually due to GraphQL validation
                errors (resolver errors are part of GQL_DATA message, and will be added as errors array)
                payload: Error : payload with the error attributed to the operation failing on the server
                id: string : operation ID of the operation that failed on the server
            </summary>
        </member>
        <member name="F:GraphQL.Client.Http.GraphQLHttpSubscriptionResult.GQLWebSocketMessageType.GQL_COMPLETE">
            <summary>
                Server sends this message to indicate that a GraphQL operation is done, and no more data will arrive for the
                specific operation.
                id: string : operation ID of the operation that completed
            </summary>
        </member>
        <member name="F:GraphQL.Client.Http.GraphQLHttpSubscriptionResult.GQLWebSocketMessageType.GQL_STOP">
            <summary>
                Client sends this message in order to stop a running GraphQL operation execution (for example: unsubscribe)
                id: string : operation id
            </summary>
        </member>
        <member name="T:GraphQL.Client.Http.HttpClientExtensions">
            <summary>
            Extensions for <see cref="T:System.Net.Http.HttpClient"/>
            </summary>
        </member>
        <member name="M:GraphQL.Client.Http.HttpClientExtensions.AsGraphQLClient(System.Net.Http.HttpClient,GraphQL.Client.Http.GraphQLHttpClientOptions)">
            <summary>
            Creates a <see cref="T:GraphQL.Client.Http.GraphQLHttpClient"/> from a <see cref="T:System.Net.Http.HttpClient"/>
            </summary>
            <param name="httpClient"></param>
            <param name="graphQLHttpClientOptions"></param>
            <returns></returns>
        </member>
        <member name="M:GraphQL.Client.Http.Internal.GraphQLHttpHandler.GetAsync(GraphQL.Common.Request.GraphQLRequest,System.Threading.CancellationToken)">
            <summary>
            Send a <see cref="T:GraphQL.Common.Request.GraphQLRequest"/> via GET
            </summary>
            <param name="request">The Request</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>The Response</returns>
        </member>
        <member name="M:GraphQL.Client.Http.Internal.GraphQLHttpHandler.PostAsync(GraphQL.Common.Request.GraphQLRequest,System.Threading.CancellationToken)">
            <summary>
            Send a <see cref="T:GraphQL.Common.Request.GraphQLRequest"/> via POST
            </summary>
            <param name="request">The Request</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>The Response</returns>
        </member>
        <member name="M:GraphQL.Client.Http.Internal.GraphQLHttpHandler.ReadHttpResponseMessageAsync(System.Net.Http.HttpResponseMessage)">
            <summary>
            Reads the <see cref="T:System.Net.Http.HttpResponseMessage"/>
            </summary>
            <param name="httpResponseMessage">The Response</param>
            <returns>The GraphQLResponse</returns>
        </member>
        <member name="T:GraphQL.Client.IGraphQLClient">
            <summary>
            Represents the Interface that any GraphQL Client must implement
            </summary>
        </member>
        <member name="M:GraphQL.Client.IGraphQLClient.SendQueryAsync(GraphQL.Common.Request.GraphQLRequest,System.Threading.CancellationToken)">
            <summary>
            Send a Query async
            </summary>
            <param name="request">The Request</param>
            <param name="cancellationToken">The Cancellation Token</param>
            <returns>The Response</returns>
        </member>
        <member name="M:GraphQL.Client.IGraphQLClient.SendMutationAsync(GraphQL.Common.Request.GraphQLRequest,System.Threading.CancellationToken)">
            <summary>
            Send a Mutation Async
            </summary>
            <param name="request">The Request</param>
            <param name="cancellationToken">The Cancellation Token</param>
            <returns>The Response</returns>
        </member>
        <member name="M:GraphQL.Client.IGraphQLClient.SendSubscribeAsync(GraphQL.Common.Request.GraphQLRequest,System.Threading.CancellationToken)">
            <summary>
            Send a Subscription async
            </summary>
            <param name="request">The Request</param>
            <param name="cancellationToken">The Cancellation Token</param>
            <returns>The Subscription Response</returns>
        </member>
        <member name="T:GraphQL.Client.IGraphQLSubscriptionResult">
            <summary>
            Represents the Result of a subscription
            </summary>
        </member>
        <member name="E:GraphQL.Client.IGraphQLSubscriptionResult.OnReceive">
            <summary>
            Event triggered when a new Response is received
            </summary>
        </member>
        <member name="P:GraphQL.Client.IGraphQLSubscriptionResult.LastResponse">
            <summary>
            Last Response Received
            </summary>
        </member>
        <member name="T:GraphQL.Client.GraphQLClient">
            <summary>
            A Client to access GraphQL EndPoints
            </summary>
        </member>
        <member name="M:GraphQL.Client.GraphQLClient.#ctor(System.String)">
            <summary>
            Initializes a new instance
            </summary>
            <param name="endPoint">The EndPoint to be used</param>
        </member>
        <member name="M:GraphQL.Client.GraphQLClient.#ctor(System.Uri)">
            <summary>
            Initializes a new instance
            </summary>
            <param name="endPoint">The EndPoint to be used</param>
        </member>
        <member name="M:GraphQL.Client.GraphQLClient.#ctor(System.String,GraphQL.Client.GraphQLClientOptions)">
            <summary>
            Initializes a new instance
            </summary>
            <param name="endPoint">The EndPoint to be used</param>
            <param name="options">The Options to be used</param>
        </member>
        <member name="M:GraphQL.Client.GraphQLClient.#ctor(System.Uri,GraphQL.Client.GraphQLClientOptions)">
            <summary>
            Initializes a new instance
            </summary>
            <param name="endPoint">The EndPoint to be used</param>
            <param name="options">The Options to be used</param>
        </member>
        <member name="M:GraphQL.Client.GraphQLClient.#ctor(GraphQL.Client.GraphQLClientOptions)">
            <summary>
            Initializes a new instance
            </summary>
            <param name="options">The Options to be used</param>
        </member>
        <member name="M:GraphQL.Client.GraphQLClient.GetQueryAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Send a query via GET
            </summary>
            <param name="query">The Request</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>The Response</returns>
        </member>
        <member name="M:GraphQL.Client.GraphQLClient.GetAsync(GraphQL.Common.Request.GraphQLRequest,System.Threading.CancellationToken)">
            <summary>
            Send a <see cref="T:GraphQL.Common.Request.GraphQLRequest"/> via GET
            </summary>
            <param name="request">The Request</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>The Response</returns>
        </member>
        <member name="M:GraphQL.Client.GraphQLClient.PostQueryAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Send a query via POST
            </summary>
            <param name="query">The Request</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>The Response</returns>
        </member>
        <member name="M:GraphQL.Client.GraphQLClient.PostAsync(GraphQL.Common.Request.GraphQLRequest,System.Threading.CancellationToken)">
            <summary>
            Send a <see cref="T:GraphQL.Common.Request.GraphQLRequest"/> via POST
            </summary>
            <param name="request">The Request</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>The Response</returns>
        </member>
        <member name="T:GraphQL.Client.GraphQLClientExtensions">
            <summary>
            Extension Methods for <see cref="T:GraphQL.Client.GraphQLClient"/>
            </summary>
        </member>
        <member name="M:GraphQL.Client.GraphQLClientExtensions.GetIntrospectionQueryAsync(GraphQL.Client.GraphQLClient,System.Threading.CancellationToken)">
            <summary>
            Send an IntrospectionQuery via GET
            </summary>
            <param name="graphQLClient">The GraphQLClient</param>
            <param name="cancellationToken"></param>
            <returns>The GraphQLResponse</returns>
        </member>
        <member name="M:GraphQL.Client.GraphQLClientExtensions.PostIntrospectionQueryAsync(GraphQL.Client.GraphQLClient,System.Threading.CancellationToken)">
            <summary>
            Send an IntrospectionQuery via POST
            </summary>
            <param name="graphQLClient">The GraphQLClient</param>
            <param name="cancellationToken"></param>
            <returns>The GraphQLResponse</returns>
        </member>
        <member name="T:GraphQL.Client.GraphQLClientOptions">
            <summary>
            The Options that the <see cref="T:GraphQL.Client.GraphQLClient"/> will use
            </summary>
        </member>
    </members>
</doc>
